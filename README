I build a disk-oriented storage manager for the Badger DBMS. Such a storage manager assumes that the primary storage location of the database is on disk.

The project is to implement a buffer pool in my storage manager. The buffer pool is responsible for moving physical pages back and forth from main memory to disk.

It allows a DBMS to support databases that are larger than the amount of memory that is available to the system.
The buffer pool's operations are transparent to other parts in the system. For example, the system asks the buffer
pool for a page using its unique identifier (page_id_t) and it does not know whether that page is already in memory
or whether the system has to go retrieve it from disk.

I implement the following three components in my storage manager:

Extendible Hash Table
LRU-K Replacement Policy
Buffer Pool Manager Instance


################################################################################
# BadgerDB quick start guide                                                   #
################################################################################

################################################################################
# Building the source and documentation                                        #
################################################################################

To build the source:
  $ make

To build the real API documentation (requires Doxygen):
  $ make doc

To view the documentation, open docs/index.html in your web browser after
running make doc.

################################################################################
# Prerequisites                                                                #
################################################################################

If you are running this on a CSL instructional machine, these are taken care of.

Otherwise, you need:
 * a modern C++ compiler (gcc version 4.6 or higher, any recent version of clang)
 * doxygen (version 1.4 or higher)
